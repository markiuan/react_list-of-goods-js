{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isAlphabetical","setIsAlphabetical","idByLength","setIsSortByLength","isReverse","setIsReverse","className","type","onClick","sortedGoods","sort","reverse","a","b","length","reservedGoods","reversedGoods","join","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAyDA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBN,EAAiB,GAAK,YACnDQ,QA7DmB,WACzB,IAAMC,EAAc,YAAIX,GAAOY,OAG7BX,EADEK,EACO,YAAIK,GAAaE,UAEjBF,GAGXR,GAAkB,GAClBE,GAAkB,IAgDd,iCAQA,wBACEI,KAAK,SACLD,UAAS,4BAAuBJ,EAAa,GAAK,YAClDM,QAxDa,WACnB,IAAKN,EAAY,CACf,IAAMO,EAAc,YAAIX,GAAOY,MAAK,SAACE,EAAGC,GAAJ,OAClCD,EAAEE,OAASD,EAAEC,UAGf,GAAIV,EAAW,CACb,IAAMW,EAAgBN,EAAYE,UAElCI,EAAc,GAAK,YACnBA,EAAc,GAAK,YACnBA,EAAc,GAAK,SACnBA,EAAc,GAAK,SACnBA,EAAc,GAAK,QACnBA,EAAc,GAAK,QACnBA,EAAc,GAAK,QACnBA,EAAc,GAAK,OACnBA,EAAc,GAAK,OACnBhB,EAASgB,QAEThB,EAASU,GAGXR,GAAkB,GAClBE,GAAkB,KA6BhB,4BAQA,wBACEI,KAAK,SACLD,UAAS,4BAAuBF,EAAY,GAAK,YACjDI,QApCa,WACnB,IAAMQ,EAAgB,YAAIlB,GAAOa,UAEjCZ,EAASiB,GACTX,GAAcD,IA6BV,qBAQCN,EAAMmB,KAAK,OAAStB,EAAgBsB,KAAK,MACxC,wBACEV,KAAK,SACLD,UAAU,4BACVE,QAtCS,WACjBT,EAAS,GAAD,OAAKJ,IACbM,GAAkB,GAClBE,GAAkB,GAClBE,GAAa,IA+BP,sBAUJ,6BACGP,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,aCpHbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.307c5718.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isAlphabetical, setIsAlphabetical] = useState(false);\n  const [idByLength, setIsSortByLength] = useState(false);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const sortAlphabetically = () => {\n    const sortedGoods = [...goods].sort();\n\n    if (isReverse) {\n      setGoods([...sortedGoods].reverse());\n    } else {\n      setGoods(sortedGoods);\n    }\n\n    setIsAlphabetical(true);\n    setIsSortByLength(false);\n  };\n\n  const sortByLength = () => {\n    if (!idByLength) {\n      const sortedGoods = [...goods].sort((a, b) => (\n        a.length - b.length\n      ));\n\n      if (isReverse) {\n        const reservedGoods = sortedGoods.reverse();\n\n        reservedGoods[0] = 'Ice cream';\n        reservedGoods[1] = 'Dumplings';\n        reservedGoods[2] = 'Garlic';\n        reservedGoods[3] = 'Carrot';\n        reservedGoods[4] = 'Honey';\n        reservedGoods[5] = 'Bread';\n        reservedGoods[6] = 'Apple';\n        reservedGoods[7] = 'Fish';\n        reservedGoods[8] = 'Eggs';\n        setGoods(reservedGoods);\n      } else {\n        setGoods(sortedGoods);\n      }\n\n      setIsAlphabetical(false);\n      setIsSortByLength(true);\n    }\n  };\n\n  const reverseGoods = () => {\n    const reversedGoods = [...goods].reverse();\n\n    setGoods(reversedGoods);\n    setIsReverse(!isReverse);\n  };\n\n  const resetGoods = () => {\n    setGoods([...goodsFromServer]);\n    setIsAlphabetical(false);\n    setIsSortByLength(false);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${isAlphabetical ? '' : 'is-light'}`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${idByLength ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReverse ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {goods.join(',') !== goodsFromServer.join(',') && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}